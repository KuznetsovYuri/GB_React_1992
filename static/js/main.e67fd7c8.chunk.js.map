{"version":3,"sources":["components/MessageList.jsx","constants.js","components/Form.jsx","App.jsx","index.js"],"names":["MessageList","_ref","messages","react_default","a","createElement","map","message","idx","key","author","text","AUTHOR","Form","addMessage","_useState","useState","_useState2","Object","slicedToArray","setText","onSubmit","e","preventDefault","type","value","onChange","target","App","setMessages","newMessage","concat","toConsumableArray","useEffect","length","timeout","setTimeout","clearTimeout","Fragment","MessageList_MessageList","Form_Form","ReactDOM","createRoot","document","getElementById","render","App_App"],"mappings":"kJAIaA,EAAc,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAC5B,OACEC,EAAAC,EAAAC,cAAA,UACGH,EAASI,IAAK,SAACC,EAASC,GAAV,OACbL,EAAAC,EAAAC,cAAA,MAAII,IAAKD,GACND,EAAQG,OADX,KACqBH,EAAQI,UCTxBC,EACL,OADKA,EAEN,MCEMC,EAAO,SAAAZ,GAAoB,IAAjBa,EAAiBb,EAAjBa,WAAiBC,EACZC,mBAAS,IADGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC7BJ,EAD6BM,EAAA,GACvBG,EADuBH,EAAA,GAUpC,OACId,EAAAC,EAAAC,cAAA,QAAMgB,SATW,SAACC,GAClBA,EAAEC,iBACFT,EAAW,CACPJ,OAAQE,EACRD,SAEJS,EAAQ,MAIJjB,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,OAAOC,MAAOd,EAAMe,SAAU,SAACJ,GAAD,OAAOF,EAAQE,EAAEK,OAAOF,UAClEtB,EAAAC,EAAAC,cAAA,wBCXCuB,EAAM,WAAM,IAAAb,EACSC,mBAAS,IADlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAChBb,EADgBe,EAAA,GACNY,EADMZ,EAAA,GAEjBH,EAAa,SAACgB,GAClBD,EAAW,GAAAE,OAAAb,OAAAc,EAAA,EAAAd,CAAKhB,GAAL,CAAe4B,MAkB5B,OAfAG,oBAAU,WACR,GAAI/B,EAASgC,OAAS,GAAKhC,EAASA,EAASgC,OAAS,GAAGxB,SAAWE,EAAa,CAC/E,IAAMuB,EAAUC,WAAW,WACzBtB,EAAW,CACTJ,OAAQE,EACRD,KAAM,aAGR,KACF,OAAO,WACL0B,aAAaF,MAGhB,CAACjC,IAGFC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkC,SAAA,KACEnC,EAAAC,EAAAC,cAACkC,EAAD,CAAarC,SAAUA,IACvBC,EAAAC,EAAAC,cAACmC,EAAD,CAAM1B,WAAYA,MC1BX2B,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD","file":"static/js/main.e67fd7c8.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from \"react\";\n\n// eslint-disable-next-line react/prop-types\nexport const MessageList = ({ messages }) => {\n  return (\n    <ul>\n      {messages.map ((message, idx) => (\n        <li key={idx}>\n          {message.author}: {message.text}\n        </li>\n      ))}\n    </ul>\n  );\n\n};","export const AUTHOR = {\n  user: \"USER\",\n  bot: \"BOT\",\n};\n","import React, { useState } from \"react\";\nimport { AUTHOR } from \"../constants\";\n\n// eslint-disable-next-line react/prop-types\nexport const Form = ({ addMessage }) => {\n    const [text, setText] = useState(\"\");\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addMessage({\n            author: AUTHOR.user,\n            text,\n        });\n        setText(\"\");\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n            <button>Send</button>\n        </form>\n\n\n    );\n\n};","import React, { useEffect } from \"react\";\nimport { MessageList } from \"./components/MessageList\";\nimport { useState } from \"react\";\nimport { AUTHOR } from \"./constants\";\nimport { Form } from \"./components/Form\";\n\nexport const App = () => {\n  const [messages, setMessages] = useState([]);\n  const addMessage = (newMessage) => {\n    setMessages([...messages, newMessage]);\n  };\n\n  useEffect(() => {\n    if (messages.length > 0 && messages[messages.length - 1].author === AUTHOR.user) {\n      const timeout = setTimeout(() => {\n        addMessage({\n          author: AUTHOR.bot,\n          text: \"I'm bot\"\n        });\n      },\n        1000);\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [messages]);\n\n  return (\n    <>\n      <MessageList messages={messages} />\n      <Form addMessage={addMessage} />\n    </>\n\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { App } from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}